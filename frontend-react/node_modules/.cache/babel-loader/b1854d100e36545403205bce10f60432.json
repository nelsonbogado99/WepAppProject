{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\n\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item,\n    rootRef: externalRef\n  } = parameters;\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, externalRef);\n  const listContext = React.useContext(ListContext);\n\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n\n  const {\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const rerender = useForcedRerendering();\n  useEnhancedEffect(() => {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(() => {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onC;\n\n    (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onM;\n\n    (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      ref: handleRef,\n      tabIndex\n    });\n  };\n\n  return {\n    getRootProps,\n    highlighted,\n    rootRef: handleRef,\n    selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","useForcedRerendering","extractEventHandlers","ListActionTypes","ListContext","useListItem","parameters","handlePointerOverEvents","item","rootRef","externalRef","itemRef","useRef","handleRef","listContext","useContext","Error","dispatch","getItemState","registerHighlightChangeHandler","registerSelectionChangeHandler","highlighted","selected","focusable","rerender","updateHighlightedState","highlightedItem","updateSelectedState","selectedItems","includes","createHandleClick","useCallback","externalHandlers","event","_externalHandlers$onC","onClick","call","defaultPrevented","type","itemClick","createHandlePointerOver","_externalHandlers$onM","onMouseOver","itemHover","tabIndex","getRootProps","externalProps","externalEventHandlers","onPointerOver","undefined","ref"],"sources":["D:/Documentos/OneDrive/Escritorio/Nueva carpeta (3)/react-router-course-paginado-basico-1/node_modules/@mui/base/useList/useListItem.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\n * It provides information about the item's state (selected, highlighted) and\n * handles the item's mouse events.\n *\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\n * @ignore - internal hook.\n */\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item,\n    rootRef: externalRef\n  } = parameters;\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, externalRef);\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerSelectionChangeHandler\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const rerender = useForcedRerendering();\n  useEnhancedEffect(() => {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(() => {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onC;\n    (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    var _externalHandlers$onM;\n    (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      ref: handleRef,\n      tabIndex\n    });\n  };\n  return {\n    getRootProps,\n    highlighted,\n    rootRef: handleRef,\n    selected\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}