{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta (3)\\\\react-router-course-paginado-basico-1\\\\src\\\\pages\\\\About.js\",\n  _s = $RefreshSig$();\n/*import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid'; // Importa Grid\r\n\r\nfunction About() {\r\n  const [rawData, setRawData] = useState('');\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Obtén los parámetros de consulta de la URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    // Si se encuentra el parámetro 'data' en la URL, establece rawData con los datos en bruto\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Cuando rawData cambia, intenta analizarlo como una lista de URL de imágenes\r\n    try {\r\n      const data = JSON.parse(rawData);\r\n      if (Array.isArray(data)) {\r\n        // Supongamos que data es una lista de URLs de imágenes\r\n        setImageUrls(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n  }, [rawData]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Estás en photos</h1>\r\n      {imageUrls.length > 0 ? (\r\n        <div>\r\n          <h2>Imágenes:</h2>\r\n          <Grid container spacing={2}>\r\n            {imageUrls.map((url, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}> \r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%', // Cambia la relación de aspecto de la imagen\r\n                    }}\r\n                    image={url}\r\n                  />\r\n                 \r\n                  <CardActions>\r\n                    <Button size=\"small\">View</Button>\r\n                    <Button size=\"small\">Edit</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <p>No hay imágenes para mostrar.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n\r\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  _s();\n  // ...\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          onClick: handleMenuClick,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"My Photo Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      keepMounted: true,\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      open: open,\n      onClose: handleMenuClose,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleMenuClose,\n        children: \"Ver Fotos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleMenuClose,\n        children: \"Cargar Im\\xE1genes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"div\",\n            sx: {\n              pt: '75%'\n            },\n            image: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              children: \"Heading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"This is a media card. You can use this section to describe the content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","AppBar","Toolbar","Typography","IconButton","MenuIcon","Menu","MenuItem","Grid","Card","CardMedia","CardContent","jsxDEV","_jsxDEV","About","_s","anchorEl","setAnchorEl","open","Boolean","handleMenuClick","event","currentTarget","handleMenuClose","children","position","edge","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","sx","flexGrow","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","container","spacing","imageUrls","map","url","index","item","xs","sm","md","height","display","flexDirection","pt","image","gutterBottom","_c","$RefreshReg$"],"sources":["D:/Documentos/OneDrive/Escritorio/Nueva carpeta (3)/react-router-course-paginado-basico-1/src/pages/About.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid'; // Importa Grid\r\n\r\nfunction About() {\r\n  const [rawData, setRawData] = useState('');\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Obtén los parámetros de consulta de la URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    // Si se encuentra el parámetro 'data' en la URL, establece rawData con los datos en bruto\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Cuando rawData cambia, intenta analizarlo como una lista de URL de imágenes\r\n    try {\r\n      const data = JSON.parse(rawData);\r\n      if (Array.isArray(data)) {\r\n        // Supongamos que data es una lista de URLs de imágenes\r\n        setImageUrls(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n  }, [rawData]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Estás en photos</h1>\r\n      {imageUrls.length > 0 ? (\r\n        <div>\r\n          <h2>Imágenes:</h2>\r\n          <Grid container spacing={2}>\r\n            {imageUrls.map((url, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}> \r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%', // Cambia la relación de aspecto de la imagen\r\n                    }}\r\n                    image={url}\r\n                  />\r\n                 \r\n                  <CardActions>\r\n                    <Button size=\"small\">View</Button>\r\n                    <Button size=\"small\">Edit</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <p>No hay imágenes para mostrar.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n\r\n*/\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\nfunction About() {\r\n  // ...\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleMenuClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            My Photo Gallery\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        keepMounted\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'right',\r\n        }}\r\n        open={open}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={handleMenuClose}>Ver Fotos</MenuItem>\r\n        <MenuItem onClick={handleMenuClose}>Cargar Imágenes</MenuItem>\r\n        {/* Agrega más elementos de menú según sea necesario */}\r\n      </Menu>\r\n      <Grid container spacing={2}>\r\n        {imageUrls.map((url, index) => (\r\n          <Grid item xs={12} sm={6} md={4} key={index}>\r\n            <Card\r\n              sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n              }}\r\n            >\r\n              <CardMedia\r\n                component=\"div\"\r\n                sx={{\r\n                  pt: '75%',\r\n                }}\r\n                image={url}\r\n              />\r\n              <CardContent sx={{ flexGrow: 1 }}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  Heading\r\n                </Typography>\r\n                <Typography>\r\n                  This is a media card. You can use this section to describe the\r\n                  content.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}