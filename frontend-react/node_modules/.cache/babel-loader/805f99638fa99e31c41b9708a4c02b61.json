{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta (3)\\\\react-router-course-paginado-basico-1\\\\src\\\\pages\\\\About.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction About() {\n  _s();\n\n  const [rawData, setRawData] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n  useEffect(() => {\n    // Obtén los parámetros de consulta de la URL\n    const params = new URLSearchParams(window.location.search);\n    const dataParam = params.get('data'); // Si se encuentra el parámetro 'data' en la URL, establece rawData con los datos en bruto\n\n    if (dataParam) {\n      setRawData(dataParam);\n    }\n  }, []);\n  useEffect(() => {\n    // Cuando rawData cambia, intenta analizarlo como una lista de URL de imágenes\n    try {\n      const data = JSON.parse(rawData);\n\n      if (Array.isArray(data)) {\n        // Supongamos que data es una lista de URLs de imágenes\n        setImageUrls(data);\n      }\n    } catch (error) {\n      console.error('Error al analizar datos en bruto:', error);\n    }\n  }, [rawData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Est\\xE1s en photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), imageUrls.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Im\\xE1genes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photos-container\",\n        children: imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `Imagen ${index}`,\n          className: \"photo\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay im\\xE1genes para mostrar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(About, \"OK/yX7bD4aK0vRlef+62xbdDtHc=\");\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","About","rawData","setRawData","imageUrls","setImageUrls","params","URLSearchParams","window","location","search","dataParam","get","data","JSON","parse","Array","isArray","error","console","length","map","url","index"],"sources":["D:/Documentos/OneDrive/Escritorio/Nueva carpeta (3)/react-router-course-paginado-basico-1/src/pages/About.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction About() {\r\n  const [rawData, setRawData] = useState('');\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Obtén los parámetros de consulta de la URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    // Si se encuentra el parámetro 'data' en la URL, establece rawData con los datos en bruto\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Cuando rawData cambia, intenta analizarlo como una lista de URL de imágenes\r\n    try {\r\n      const data = JSON.parse(rawData);\r\n      if (Array.isArray(data)) {\r\n        // Supongamos que data es una lista de URLs de imágenes\r\n        setImageUrls(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n  }, [rawData]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Estás en photos</h1>\r\n      {imageUrls.length > 0 ? (\r\n        <div>\r\n          <h2>Imágenes:</h2>\r\n          <div className=\"photos-container\">\r\n            {imageUrls.map((url, index) => (\r\n              <img key={index} src={url} alt={`Imagen ${index}`} className=\"photo\" />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No hay imágenes para mostrar.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,MAAM,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf;IACA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAP,CAAW,MAAX,CAAlB,CAHc,CAKd;;IACA,IAAID,SAAJ,EAAe;MACbR,UAAU,CAACQ,SAAD,CAAV;IACD;EACF,CATQ,EASN,EATM,CAAT;EAWAZ,SAAS,CAAC,MAAM;IACd;IACA,IAAI;MACF,MAAMc,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWb,OAAX,CAAb;;MACA,IAAIc,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAJ,EAAyB;QACvB;QACAR,YAAY,CAACQ,IAAD,CAAZ;MACD;IACF,CAND,CAME,OAAOK,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAc,mCAAd,EAAmDA,KAAnD;IACD;EACF,CAXQ,EAWN,CAAChB,OAAD,CAXM,CAAT;EAaA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGE,SAAS,CAACgB,MAAV,GAAmB,CAAnB,gBACC;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,kBAAf;QAAA,UACGhB,SAAS,CAACiB,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,kBACb;UAAiB,GAAG,EAAED,GAAtB;UAA2B,GAAG,EAAG,UAASC,KAAM,EAAhD;UAAmD,SAAS,EAAC;QAA7D,GAAUA,KAAV;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAUC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GA7CQtB,K;;KAAAA,K;AA+CT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}