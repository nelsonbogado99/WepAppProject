{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport { useMenuItem } from '../useMenuItem';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUtilityClass));\n}\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuItem API](https://mui.com/base-ui/react-menu/components-api/#menu-item)\n */\n\n\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, forwardedRef) {\n  var _slots$root;\n\n  const {\n    children,\n    disabled: disabledProp = false,\n    label,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    disabled: disabledProp,\n    rootRef: forwardedRef,\n    label\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuItem };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getMenuItemUtilityClass","useMenuItem","unstable_composeClasses","composeClasses","useSlotProps","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","disabled","focusVisible","slots","root","MenuItem","forwardRef","props","forwardedRef","_slots$root","children","disabledProp","label","slotProps","other","getRootProps","highlighted","rootRef","classes","Root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","process","env","NODE_ENV","propTypes","node","string","bool","onClick","func","shape","oneOfType","object"],"sources":["D:/Documentos/OneDrive/Escritorio/Nueva carpeta (3)/react-router-course-paginado-basico-1/node_modules/@mui/base/MenuItem/MenuItem.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport { useMenuItem } from '../useMenuItem';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUtilityClass));\n}\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuItem API](https://mui.com/base-ui/react-menu/components-api/#menu-item)\n */\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      disabled: disabledProp = false,\n      label,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    disabled: disabledProp,\n    rootRef: forwardedRef,\n    label\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuItem };"],"mappings":"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"},"metadata":{},"sourceType":"module"}