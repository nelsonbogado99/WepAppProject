{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element); // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height; // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\n\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\n\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n} // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\n\n\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n} // Returns the inner client rect, subtracting scrollbars if present.\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = { ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n\n  return rectToClientRect(rect);\n}\n\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\n\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  if (polyfill) {\n    return polyfill(element);\n  }\n\n  return element.offsetParent;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n}; // https://samthor.au/2021/observing-dom/\n\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n\n    if (!skip) {\n      onMove();\n    }\n\n    if (!width || !height) {\n      return;\n    }\n\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n\n      isFirstUpdate = false;\n    } // Older browsers don't support a `document` as the root and will throw an\n    // error.\n\n\n    try {\n      io = new IntersectionObserver(handleObserve, { ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n\n    io.observe(element);\n  }\n\n  refresh(true);\n  return cleanup;\n}\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\n\n\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n\n      update();\n    });\n\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n\n    resizeObserver.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\n\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = { ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, { ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","round","createCoords","max","min","floor","getComputedStyle","isHTMLElement","isElement","getWindow","isWebKit","getDocumentElement","getNodeName","isOverflowElement","getNodeScroll","getOverflowAncestors","getParentNode","isLastTraversableNode","isContainingBlock","isTableElement","getContainingBlock","getCssDimensions","element","css","width","parseFloat","height","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","contextElement","getScale","domElement","rect","getBoundingClientRect","x","y","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","offsetParent","clientRect","scale","visualOffsets","left","top","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","strategy","isOffsetParentAnElement","documentElement","scroll","scrollLeft","scrollTop","offsets","offsetRect","getClientRects","Array","from","getWindowScrollBarX","getDocumentRect","html","body","ownerDocument","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","parentNode","position","getClippingElementAncestors","cache","cachedResult","get","result","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","shouldDropCurrentNode","includes","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","concat","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","right","bottom","getDimensions","getRectRelativeToOffsetParent","getTrueOffsetParent","polyfill","getOffsetParent","window","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","isRTL","platform","observeMove","onMove","io","timeoutId","root","cleanup","clearTimeout","disconnect","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","rootMargin","options","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","IntersectionObserver","e","observe","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","frameId","prevRefRect","frameLoop","nextRefRect","removeEventListener","Map","mergedOptions","platformWithCache"],"sources":["D:/Documentos/OneDrive/Escritorio/Nueva carpeta (3)/react-router-course-paginado-basico-1/node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  return getCssDimensions(element);\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (_ref) {\n  let {\n    reference,\n    floating,\n    strategy\n  } = _ref;\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    clearTimeout(timeoutId);\n    io && io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          resizeObserver && resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo && cleanupIo();\n    resizeObserver && resizeObserver.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}