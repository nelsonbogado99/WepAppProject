{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\OneDrive\\\\Escritorio\\\\Nueva carpeta (3)\\\\react-router-course-paginado-basico-1\\\\src\\\\Paginas\\\\Content.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid'; // Importa Grid\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Content() {\n  _s();\n  const [rawData, setRawData] = useState('');\n  const [imageUrls, setImageUrls] = useState([]);\n  useEffect(() => {\n    // Obtén los parámetros de consulta de la URL\n    const params = new URLSearchParams(window.location.search);\n    const dataParam = params.get('data');\n\n    // Si se encuentra el parámetro 'data' en la URL, establece rawData con los datos en bruto\n    if (dataParam) {\n      setRawData(dataParam);\n    }\n  }, []);\n  useEffect(() => {\n    // Cuando rawData cambia, intenta analizarlo como una lista de URL de imágenes\n    try {\n      const data = JSON.parse(rawData);\n      if (Array.isArray(data)) {\n        // Supongamos que data es una lista de URLs de imágenes\n        setImageUrls(data);\n      }\n    } catch (error) {\n      console.error('Error al analizar datos en bruto:', error);\n    }\n  }, [rawData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: imageUrls.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [\" \", imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"div\",\n              sx: {\n                pt: '75%' // Cambia la relación de aspecto de la imagen\n              },\n\n              image: url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay im\\xE1genes para mostrar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Content, \"OK/yX7bD4aK0vRlef+62xbdDtHc=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardMedia","CardContent","Typography","CardActions","Button","Grid","jsxDEV","_jsxDEV","Content","_s","rawData","setRawData","imageUrls","setImageUrls","params","URLSearchParams","window","location","search","dataParam","get","data","JSON","parse","Array","isArray","error","console","children","length","container","spacing","map","url","index","item","xs","sm","md","sx","height","display","flexDirection","component","pt","image","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["D:/Documentos/OneDrive/Escritorio/Nueva carpeta (3)/react-router-course-paginado-basico-1/src/Paginas/Content.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid'; // Importa Grid\r\n\r\nfunction Content() {\r\n  const [rawData, setRawData] = useState('');\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Obtén los parámetros de consulta de la URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    // Si se encuentra el parámetro 'data' en la URL, establece rawData con los datos en bruto\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Cuando rawData cambia, intenta analizarlo como una lista de URL de imágenes\r\n    try {\r\n      const data = JSON.parse(rawData);\r\n      if (Array.isArray(data)) {\r\n        // Supongamos que data es una lista de URLs de imágenes\r\n        setImageUrls(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n  }, [rawData]);\r\n\r\n  return (\r\n    <div>\r\n     \r\n      {imageUrls.length > 0 ? (\r\n        <div>\r\n         \r\n          <Grid container spacing={2}> {/* Utiliza Grid para crear una cuadrícula */}\r\n            {imageUrls.map((url, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}> {/* Establece el número de columnas por fila */}\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%', // Cambia la relación de aspecto de la imagen\r\n                    }}\r\n                    image={url}\r\n                  />\r\n                 \r\n                  <CardActions>\r\n                   \r\n                    <Button size=\"small\">Edit</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      ) : (\r\n        <p>No hay imágenes para mostrar.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}