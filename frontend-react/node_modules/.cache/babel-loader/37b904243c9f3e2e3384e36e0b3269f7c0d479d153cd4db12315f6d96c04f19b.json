{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\OneDrive\\\\Documentos\\\\SPD_2023\\\\WepAppProject\\\\frontend-react\\\\src\\\\Paginas\\\\Content.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nfunction Content() {\r\n  const [rawData, setRawData] = useState('');\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedImageUrl, setSelectedImageUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const data = JSON.parse(rawData);\r\n      if (Array.isArray(data)) {\r\n        setImageUrls(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n  }, [rawData]);\r\n\r\n  const handleImageClick = (url) => {\r\n    setSelectedImageUrl(url);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {imageUrls.length > 0 ? (\r\n        <div>\r\n          <Grid container spacing={2}>\r\n            {imageUrls.map((url, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%',\r\n                      backgroundColor: 'blue', \r\n                      cursor: 'pointer', \r\n                    }}\r\n                    image={url}\r\n                    onClick={() => handleImageClick(url)}\r\n                  />\r\n                 \r\n                  <CardActions sx={{ backgroundColor: '#eaeff1' }}>\r\n                    <Button size=\"small\">Edit</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          {}\r\n         <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n            <DialogContent>\r\n              <img src={selectedImageUrl} alt=\"FullScreen\" style={{ width: '100%', height: 'auto' }} />\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      ) : (\r\n        <p>No hay imágenes para mostrar.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n*/\n\n/* Este es el que funciona \r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nimport Navigator from './Navigator';\r\n\r\nfunction Content({dato, miFuncionEnPaperbase}) {\r\n\r\n  console.log('Parámetro recibido:', dato);\r\n \r\n  const [rawData, setRawData] = useState('');\r\n  const [mediaItems, setMediaItems] = useState([]);\r\n  const [selectedMedia, setSelectedMedia] = useState(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchDataFromBackend = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:80/guardados'); // Reemplaza 'URL_DEL_BACKEND' con la URL real de tu backend\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (Array.isArray(data)) {\r\n            setMediaItems(data);\r\n            console.log('Mis datos', data);\r\n          }\r\n        } else {\r\n          console.error('Error al obtener datos del backend:', response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud al backend:', error);\r\n      }\r\n    };\r\n  \r\n\r\n    try {\r\n      if (dato === 'SIIII') {\r\n        const data = JSON.parse(rawData);\r\n  \r\n        if (Array.isArray(data)) {\r\n          setMediaItems(data);\r\n          console.log('Mis datos', data);\r\n        }\r\n      } else {\r\n        // Realizar la petición al backend\r\n        fetchDataFromBackend();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n\r\n\r\n  \r\n  }, [rawData]);\r\n\r\n  const handleMediaClick = (media) => {\r\n    setSelectedMedia(media);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const openVideoInNewTab = (videoUrl) => {\r\n    window.open(videoUrl, '_blank');\r\n  };\r\n  \r\n  console.log('Contenido de mediaItems:', mediaItems);\r\n\r\n  return (\r\n    <div >\r\n      {mediaItems.length > 0 ? (\r\n        <div>\r\n          <Grid container spacing={2}>\r\n            {mediaItems.map((media, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%',\r\n                      backgroundColor: 'blue',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    image={media.baseUrl}\r\n                    onClick={() => {\r\n                      if (media.mimeType && media.mimeType.startsWith('image')) {\r\n                        handleMediaClick(media);\r\n                      } else if (media.mimeType && media.mimeType.startsWith('video')) {\r\n                        openVideoInNewTab(media.productUrl);\r\n                      }\r\n                    }}\r\n                  />\r\n\r\n                  <CardActions sx={{ backgroundColor: '#eaeff1' }}>\r\n                    <Button size=\"small\">Edita</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n            <DialogContent>\r\n              {selectedMedia && selectedMedia.mimeType && selectedMedia.mimeType.startsWith('image') ? (\r\n                <img src={selectedMedia.baseUrl} alt=\"FullScreen\" style={{ width: '100%', height: 'auto' }} />\r\n              ) : null}\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      ) : (\r\n        <p>No hay medios para mostrar.</p>\r\n      )}\r\n      <Navigator data={mediaItems} miFuncionEnPaperbase={miFuncionEnPaperbase} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Content;\r\n*/\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport Navigator from './Navigator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Content({\n  dato,\n  miFuncionEnPaperbase\n}) {\n  _s();\n  console.log('Parámetro recibido:', dato);\n  const [rawData, setRawData] = useState('');\n  const [mediaItems, setMediaItems] = useState([]);\n  const [selectedMedia, setSelectedMedia] = useState(null);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [confirmDeleteDialogOpen, setConfirmDeleteDialogOpen] = useState(false);\n  const [mediaToDelete, setMediaToDelete] = useState(null);\n  const location = useLocation();\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const dataParam = params.get('data');\n    if (dataParam) {\n      setRawData(dataParam);\n    }\n  }, []);\n  useEffect(() => {\n    try {\n      if (dato === \"SIIII\") {\n        const data = JSON.parse(rawData);\n        if (Array.isArray(data)) {\n          setMediaItems(data);\n          console.log('Mis datos', data);\n        }\n      } else {\n        console.log('Estoy en el else');\n        sendDataToBackend();\n      }\n    } catch (error) {\n      console.error('Error al analizar datos en bruto:', error);\n    }\n  }, [rawData, dato]);\n  const sendDataToBackend = async () => {\n    try {\n      if (location.state && location.state.data) {\n        const data = location.state.data;\n        console.log('Esto es data', data);\n        const response = await fetch(`http://localhost:80/eliminar`);\n        if (response.ok) {\n          const responseData = await response.json();\n          console.log(responseData);\n          setMediaItems(data); // Actualiza el estado mediaItems con el valor data recibido del backend\n        } else {\n          console.error('Error al enviar datos al backend:', response.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error al enviar datos al backend:', error);\n    }\n  };\n  const handleMediaClick = media => {\n    setSelectedMedia(media);\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  const openVideoInNewTab = videoUrl => {\n    window.open(videoUrl, '_blank');\n  };\n  const eliminarFoto = async media => {\n    try {\n      const response = await fetch(`http://localhost:80/elimi/${media.id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Eliminación exitosa, actualiza la lista de medios\n        setMediaItems(mediaItems.filter(item => item.id !== media.id));\n        setConfirmDeleteDialogOpen(false); // Cerramos el diálogo de confirmación después de eliminar la foto\n      } else {\n        console.error('Error al eliminar la foto:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error al eliminar la foto:', error);\n    }\n  };\n  const handleConfirmDelete = () => {\n    if (mediaToDelete) {\n      eliminarFoto(mediaToDelete);\n    }\n  };\n\n  /* try {\r\n      if (location.state && location.state.data) {\r\n        const data = location.state.data;\r\n        console.log('Esto es data', data);\r\n        const response = await fetch(`http://localhost:80/elimi/${media.id}`);\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          console.log(responseData);\r\n          setMediaItems(data); // Actualiza el estado mediaItems con el valor data recibido del backend\r\n        } else {\r\n          console.error('Error al enviar datos al backend:', response.statusText);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al enviar datos al backend:', error);\r\n    }*/\n\n  console.log('Contenido de mediaItems:', mediaItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [mediaItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: mediaItems.map((media, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              height: '100%',\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"div\",\n              sx: {\n                pt: '75%',\n                backgroundColor: 'blue',\n                cursor: 'pointer'\n              },\n              image: media.baseUrl,\n              onClick: () => {\n                if (media.mimeType && media.mimeType.startsWith('image')) {\n                  handleMediaClick(media);\n                } else if (media.mimeType && media.mimeType.startsWith('video')) {\n                  openVideoInNewTab(media.productUrl);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              sx: {\n                backgroundColor: '#eaeff1'\n              },\n              children: dato === \"SIIII\" && /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => {\n                  setMediaToDelete(media);\n                  setConfirmDeleteDialogOpen(true);\n                },\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openDialog,\n        onClose: handleCloseDialog,\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: selectedMedia && selectedMedia.mimeType && selectedMedia.mimeType.startsWith('image') ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedMedia.baseUrl,\n            alt: \"FullScreen\",\n            style: {\n              width: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: confirmDeleteDialogOpen,\n        onClose: () => setConfirmDeleteDialogOpen(false),\n        children: /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xBFEst\\xE1s seguro de que deseas eliminar esta foto?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleConfirmDelete,\n            children: \"S\\xED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setConfirmDeleteDialogOpen(false),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay medios para mostrar.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Navigator, {\n      data: mediaItems,\n      miFuncionEnPaperbase: miFuncionEnPaperbase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n_s(Content, \"fOYjh4m3q8qT0HQiDD/PE0rU6y0=\", false, function () {\n  return [useLocation];\n});\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","Card","CardMedia","CardActions","Button","Grid","Dialog","DialogContent","Navigator","jsxDEV","_jsxDEV","Content","dato","miFuncionEnPaperbase","_s","console","log","rawData","setRawData","mediaItems","setMediaItems","selectedMedia","setSelectedMedia","openDialog","setOpenDialog","confirmDeleteDialogOpen","setConfirmDeleteDialogOpen","mediaToDelete","setMediaToDelete","location","params","URLSearchParams","window","search","dataParam","get","data","JSON","parse","Array","isArray","sendDataToBackend","error","state","response","fetch","ok","responseData","json","statusText","handleMediaClick","media","handleCloseDialog","openVideoInNewTab","videoUrl","open","eliminarFoto","id","method","filter","item","status","handleConfirmDelete","children","length","container","spacing","map","index","xs","sm","md","sx","height","display","flexDirection","component","pt","backgroundColor","cursor","image","baseUrl","onClick","mimeType","startsWith","productUrl","fileName","_jsxFileName","lineNumber","columnNumber","size","onClose","src","alt","style","width","_c","$RefreshReg$"],"sources":["D:/Documentos/OneDrive/Documentos/SPD_2023/WepAppProject/frontend-react/src/Paginas/Content.js"],"sourcesContent":["/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nfunction Content() {\r\n  const [rawData, setRawData] = useState('');\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [selectedImageUrl, setSelectedImageUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const data = JSON.parse(rawData);\r\n      if (Array.isArray(data)) {\r\n        setImageUrls(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n  }, [rawData]);\r\n\r\n  const handleImageClick = (url) => {\r\n    setSelectedImageUrl(url);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {imageUrls.length > 0 ? (\r\n        <div>\r\n          <Grid container spacing={2}>\r\n            {imageUrls.map((url, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%',\r\n                      backgroundColor: 'blue', \r\n                      cursor: 'pointer', \r\n                    }}\r\n                    image={url}\r\n                    onClick={() => handleImageClick(url)}\r\n                  />\r\n                 \r\n                  <CardActions sx={{ backgroundColor: '#eaeff1' }}>\r\n                    <Button size=\"small\">Edit</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          {}\r\n         <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n            <DialogContent>\r\n              <img src={selectedImageUrl} alt=\"FullScreen\" style={{ width: '100%', height: 'auto' }} />\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      ) : (\r\n        <p>No hay imágenes para mostrar.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n*/\r\n\r\n/* Este es el que funciona \r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nimport Navigator from './Navigator';\r\n\r\nfunction Content({dato, miFuncionEnPaperbase}) {\r\n\r\n  console.log('Parámetro recibido:', dato);\r\n \r\n  const [rawData, setRawData] = useState('');\r\n  const [mediaItems, setMediaItems] = useState([]);\r\n  const [selectedMedia, setSelectedMedia] = useState(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchDataFromBackend = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:80/guardados'); // Reemplaza 'URL_DEL_BACKEND' con la URL real de tu backend\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (Array.isArray(data)) {\r\n            setMediaItems(data);\r\n            console.log('Mis datos', data);\r\n          }\r\n        } else {\r\n          console.error('Error al obtener datos del backend:', response.status, response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al realizar la solicitud al backend:', error);\r\n      }\r\n    };\r\n  \r\n\r\n    try {\r\n      if (dato === 'SIIII') {\r\n        const data = JSON.parse(rawData);\r\n  \r\n        if (Array.isArray(data)) {\r\n          setMediaItems(data);\r\n          console.log('Mis datos', data);\r\n        }\r\n      } else {\r\n        // Realizar la petición al backend\r\n        fetchDataFromBackend();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n\r\n\r\n  \r\n  }, [rawData]);\r\n\r\n  const handleMediaClick = (media) => {\r\n    setSelectedMedia(media);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const openVideoInNewTab = (videoUrl) => {\r\n    window.open(videoUrl, '_blank');\r\n  };\r\n  \r\n  console.log('Contenido de mediaItems:', mediaItems);\r\n\r\n  return (\r\n    <div >\r\n      {mediaItems.length > 0 ? (\r\n        <div>\r\n          <Grid container spacing={2}>\r\n            {mediaItems.map((media, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%',\r\n                      backgroundColor: 'blue',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    image={media.baseUrl}\r\n                    onClick={() => {\r\n                      if (media.mimeType && media.mimeType.startsWith('image')) {\r\n                        handleMediaClick(media);\r\n                      } else if (media.mimeType && media.mimeType.startsWith('video')) {\r\n                        openVideoInNewTab(media.productUrl);\r\n                      }\r\n                    }}\r\n                  />\r\n\r\n                  <CardActions sx={{ backgroundColor: '#eaeff1' }}>\r\n                    <Button size=\"small\">Edita</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n            <DialogContent>\r\n              {selectedMedia && selectedMedia.mimeType && selectedMedia.mimeType.startsWith('image') ? (\r\n                <img src={selectedMedia.baseUrl} alt=\"FullScreen\" style={{ width: '100%', height: 'auto' }} />\r\n              ) : null}\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      ) : (\r\n        <p>No hay medios para mostrar.</p>\r\n      )}\r\n      <Navigator data={mediaItems} miFuncionEnPaperbase={miFuncionEnPaperbase} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Content;\r\n*/\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom'; \r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\n\r\nimport Navigator from './Navigator';\r\n\r\nfunction Content({ dato, miFuncionEnPaperbase }) {\r\n\r\n  console.log('Parámetro recibido:', dato);\r\n\r\n  const [rawData, setRawData] = useState('');\r\n  const [mediaItems, setMediaItems] = useState([]);\r\n  const [selectedMedia, setSelectedMedia] = useState(null);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [confirmDeleteDialogOpen, setConfirmDeleteDialogOpen] = useState(false);\r\n  const [mediaToDelete, setMediaToDelete] = useState(null);\r\n  \r\n  const location = useLocation(); \r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const dataParam = params.get('data');\r\n\r\n    if (dataParam) {\r\n      setRawData(dataParam);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (dato === \"SIIII\") {\r\n        const data = JSON.parse(rawData);\r\n        if (Array.isArray(data)) {\r\n          setMediaItems(data);\r\n          console.log('Mis datos', data);\r\n        }\r\n      } else {\r\n        console.log('Estoy en el else');\r\n        sendDataToBackend();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al analizar datos en bruto:', error);\r\n    }\r\n  }, [rawData, dato]);\r\n\r\n  const sendDataToBackend = async () => {\r\n    try {\r\n      if (location.state && location.state.data) {\r\n        const data = location.state.data;\r\n        console.log('Esto es data', data);\r\n        const response = await fetch(`http://localhost:80/eliminar`);\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          console.log(responseData);\r\n          setMediaItems(data); // Actualiza el estado mediaItems con el valor data recibido del backend\r\n        } else {\r\n          console.error('Error al enviar datos al backend:', response.statusText);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al enviar datos al backend:', error);\r\n    }\r\n  };\r\n  const handleMediaClick = (media) => {\r\n    setSelectedMedia(media);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const openVideoInNewTab = (videoUrl) => {\r\n    window.open(videoUrl, '_blank');\r\n  };\r\n\r\n  const eliminarFoto = async (media) => {\r\n      try {\r\n      const response = await fetch(`http://localhost:80/elimi/${media.id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        // Eliminación exitosa, actualiza la lista de medios\r\n        setMediaItems(mediaItems.filter(item => item.id !== media.id));\r\n        setConfirmDeleteDialogOpen(false); // Cerramos el diálogo de confirmación después de eliminar la foto\r\n      } else {\r\n        console.error('Error al eliminar la foto:', response.status, response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al eliminar la foto:', error);\r\n    }\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    if (mediaToDelete) {\r\n      eliminarFoto(mediaToDelete);\r\n    }\r\n  };\r\n\r\n  /* try {\r\n      if (location.state && location.state.data) {\r\n        const data = location.state.data;\r\n        console.log('Esto es data', data);\r\n        const response = await fetch(`http://localhost:80/elimi/${media.id}`);\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          console.log(responseData);\r\n          setMediaItems(data); // Actualiza el estado mediaItems con el valor data recibido del backend\r\n        } else {\r\n          console.error('Error al enviar datos al backend:', response.statusText);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al enviar datos al backend:', error);\r\n    }*/\r\n\r\n  console.log('Contenido de mediaItems:', mediaItems);\r\n\r\n  return (\r\n    <div>\r\n      {mediaItems.length > 0 ? (\r\n        <div>\r\n          <Grid container spacing={2}>\r\n            {mediaItems.map((media, index) => (\r\n              <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <Card\r\n                  sx={{\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"div\"\r\n                    sx={{\r\n                      pt: '75%',\r\n                      backgroundColor: 'blue',\r\n                      cursor: 'pointer',\r\n                    }}\r\n                    image={media.baseUrl}\r\n                    onClick={() => {\r\n                      if (media.mimeType && media.mimeType.startsWith('image')) {\r\n                        handleMediaClick(media);\r\n                      } else if (media.mimeType && media.mimeType.startsWith('video')) {\r\n                        openVideoInNewTab(media.productUrl);\r\n                      }\r\n                    }}\r\n                  />\r\n\r\n                  <CardActions sx={{ backgroundColor: '#eaeff1' }}>\r\n                    {dato === \"SIIII\" && ( \r\n                      <Button size=\"small\" onClick={() => {\r\n                        setMediaToDelete(media);\r\n                        setConfirmDeleteDialogOpen(true);\r\n                      }}>Eliminar</Button>\r\n                    )} \r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <Dialog open={openDialog} onClose={handleCloseDialog}>\r\n            <DialogContent>\r\n              {selectedMedia && selectedMedia.mimeType && selectedMedia.mimeType.startsWith('image') ? (\r\n                <img src={selectedMedia.baseUrl} alt=\"FullScreen\" style={{ width: '100%', height: 'auto' }} />\r\n              ) : null}\r\n            </DialogContent>\r\n          </Dialog>\r\n\r\n         \r\n          <Dialog open={confirmDeleteDialogOpen} onClose={() => setConfirmDeleteDialogOpen(false)}>\r\n            <DialogContent>\r\n              <p>¿Estás seguro de que deseas eliminar esta foto?</p>\r\n              <Button onClick={handleConfirmDelete}>Sí</Button>\r\n              <Button onClick={() => setConfirmDeleteDialogOpen(false)}>No</Button>\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      ) : (\r\n        <p>No hay medios para mostrar.</p>\r\n      )}\r\n      <Navigator data={mediaItems} miFuncionEnPaperbase={miFuncionEnPaperbase} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}