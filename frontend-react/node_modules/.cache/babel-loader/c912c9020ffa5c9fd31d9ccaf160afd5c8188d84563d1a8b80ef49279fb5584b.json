{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nexport default function Delete() {\n  _s();\n  const location = useLocation();\n  const {\n    data\n  } = location.state;\n  useEffect(() => {\n    // Lógica para llamar a la función en tu backend y pasarle la data\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:80/eliminado', {\n          method: 'POST',\n          // Cambiamos el método de la solicitud a POST\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data) // Convertimos el objeto data a JSON y lo enviamos en el cuerpo de la solicitud\n        });\n\n        if (response.ok) {\n          const responseData = await response.json();\n          console.log('Respuesta del backend:', responseData);\n        } else {\n          console.error('Error al llamar al backend:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error de red:', error);\n      }\n    };\n\n    // Llama a la función fetchData al montar el componente\n    fetchData();\n  }, [data]);\n\n  // Resto del código...\n}\n_s(Delete, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = Delete;\nvar _c;\n$RefreshReg$(_c, \"Delete\");","map":{"version":3,"names":["React","useEffect","useLocation","Delete","_s","location","data","state","fetchData","response","fetch","method","headers","body","JSON","stringify","ok","responseData","json","console","log","error","statusText","_c","$RefreshReg$"],"sources":["D:/Documentos/OneDrive/Documentos/SPD_2023/WepAppProject/frontend-react/src/Paginas/Delete.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function Delete() {\r\n  const location = useLocation();\r\n  const { data } = location.state;\r\n\r\n  useEffect(() => {\r\n    // Lógica para llamar a la función en tu backend y pasarle la data\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:80/eliminado', {\r\n          method: 'POST', // Cambiamos el método de la solicitud a POST\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(data) // Convertimos el objeto data a JSON y lo enviamos en el cuerpo de la solicitud\r\n        });\r\n        if (response.ok) {\r\n          const responseData = await response.json();\r\n          console.log('Respuesta del backend:', responseData);\r\n        } else {\r\n          console.error('Error al llamar al backend:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error de red:', error);\r\n      }\r\n    };\r\n\r\n    // Llama a la función fetchData al montar el componente\r\n    fetchData();\r\n  }, [data]);\r\n\r\n  // Resto del código...\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEI;EAAK,CAAC,GAAGD,QAAQ,CAACE,KAAK;EAE/BN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;UAC5DC,MAAM,EAAE,MAAM;UAAE;UAChBC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,CAAC;QAC7B,CAAC,CAAC;;QACF,IAAIG,QAAQ,CAACO,EAAE,EAAE;UACf,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;UAC1CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,YAAY,CAAC;QACrD,CAAC,MAAM;UACLE,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEZ,QAAQ,CAACa,UAAU,CAAC;QACnE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACvC;IACF,CAAC;;IAED;IACAb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;;EAEV;AACF;AAACF,EAAA,CA/BuBD,MAAM;EAAA,QACXD,WAAW;AAAA;AAAAqB,EAAA,GADNpB,MAAM;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}